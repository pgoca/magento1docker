#!/usr/bin/env bash

getUserInput() {
    local userInput=''
    read userInput
    if [ -z "$userInput" ]; then
        userInput="$1"
    fi
    echo $userInput
}

echo -n "[OPTIONAL] Git repository URL: "
gitRepo=$(getUserInput "")

echo -n "[DEFAULT=MagentoProject] Project name: "
projectName=$(getUserInput "MagentoProject")

echo -n "[DEFAULT=80] Port to access apache: "
apachePort=$(getUserInput "80")

echo -n "[DEFAULT=3306] Port to access mysql: "
mysqlPort=$(getUserInput "3306")

echo -n "[DEFAULT=magento] Database name: "
mysqlDatabaseName=$(getUserInput "magento")

echo "PHP versions available - 5.6, 7.0, 7.1, 7.2 and more (https://hub.docker.com/r/library/php/tags/)"
echo -n "[DEFAULT=5.6] PHP version: "
phpVersion=$(getUserInput "5.6")

echo "If you want to import database dump during installation process then copy file to db directory and type its name. Leave empty otherwise."
echo -n "Dump filename: "
dumpName=$(getUserInput "")

cp ./build/docker-compose.yml ./docker-compose.yml

sed -i "s/{{PROJECT_NAME}}/$projectName/g" ./docker-compose.yml
sed -i "s/{{APACHE_PORT_EXPOSE}}/$apachePort/g" ./docker-compose.yml
sed -i "s/{{DB_PORT_EXPOSE}}/$mysqlPort/g" ./docker-compose.yml

cp ./build/php_Dockerfile ./php/Dockerfile

sed -i "s/{{PHP_VERSION}}/$phpVersion/g" ./php/Dockerfile

cp ./build/apache_Dockerfile ./apache/Dockerfile
cp ./build/apache_conf_httpd ./apache/conf/httpd.conf

cp ./build/apache_conf_sites-enabled_docker-vhost ./apache/conf/sites-enabled/docker-vhost.conf
sed -i "s/{{PROJECT_NAME}}/$projectName/g" ./apache/conf/sites-enabled/docker-vhost.conf

cp ./build/exec ./bin/exec
sed -i "s/{{PROJECT_NAME}}/$projectName/g" ./bin/exec

cp ./build/install ./bin/install
sed -i "s/{{DUMP_NAME}}/$dumpName/g" ./bin/install
sed -i "s/{{DATABASE_NAME}}/$mysqlDatabaseName/g" ./bin/install
sed -i "s/{{PROJECT_NAME}}/$projectName/g" ./bin/install
sed -i "s>{{GIT_REPO}}>$gitRepo>g" ./bin/install

cp ./build/php_ini ./php/php.ini
sed -i "s/{{PROJECT_NAME}}/$projectName/g" ./php/php.ini

chmod +x ./bin/*

echo "Finished building without errors."
